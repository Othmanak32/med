version: '3.8'

services:
  backend:
    build: .
    container_name: accounting_backend
    restart: unless-stopped
    env_file: app/.env.production
    volumes:
      - ./uploads:/app/uploads
      - ./backups:/app/backups
    depends_on:
      - db
    networks:
      - app_network

  frontend:
    build: ./frontend
    container_name: accounting_frontend
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - backend
    networks:
      - app_network

  db:
    image: postgres:15-alpine
    container_name: accounting_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-accounting_db}
      POSTGRES_USER: ${DB_USER:-accounting_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secure_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network

  pgbackups:
    image: prodrigestivill/postgres-backup-local
    container_name: accounting_db_backup
    restart: unless-stopped
    volumes:
      - ./database-backups:/backups
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_DB=${DB_NAME:-accounting_db}
      - POSTGRES_USER=${DB_USER:-accounting_user}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-secure_password}
      - SCHEDULE=@daily
      - BACKUP_KEEP_DAYS=7
      - BACKUP_KEEP_WEEKS=4
      - BACKUP_KEEP_MONTHS=6
    networks:
      - app_network
    depends_on:
      - db

volumes:
  postgres_data:

networks:
  app_network:
    driver: bridge
